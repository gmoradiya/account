
<center>
  <%= link_to 'New Follow up', new_patient_follow_up_path(@patient, appointment_id: params[:appointment_id]), class: 'btn btn-success pagination' %> 
</center>


<%= form_with(model: [@patient, @follow_up], local: true) do |form| %>
  <% if @follow_up.errors.any? %>
    <div class="errors">
      <h2><%= pluralize(@follow_up.errors.count, "error") %> prohibited this follow_up from being saved:</h2>
      <ul>
        <% @follow_up.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>


  <div class="form-group">
    <%= form.label :pdf, "Upload PDF/Image", class: 'label'  %>
    <%= form.file_field :pdf, class: 'input-field' %>
  </div>

  <div class="form-group">
    <%= form.submit 'Save', class: 'btn btn-primary' %>
  </div>
<% end %>

<%= link_to 'Back', root_path, class: 'btn btn-secondary' %>

<% if @follow_ups.any? %>
  <div class="follow-up-container">
    <center><h2>All Follow Ups For <%= @patient.name %> - <%= @patient.case_number %></h2></center>
    <div class="follow-up-list">
      <% @follow_ups.each do |follow_up| %>
        <% if follow_up.pdf.content_type == 'application/pdf'%>
          <div class="pdf-container" id="pdf-<%= follow_up.id %>" data-pdf-url="<%= url_for(follow_up.pdf) %>">
          
            <p><strong>Date:</strong> <%= follow_up.created_at.in_time_zone("Asia/Kolkata").strftime('%d - %m - %Y , %H:%M:%S') %></p>
            <a href="<%= url_for(follow_up.pdf) %>" target="_blank" class="btn btn-primary label">View PDF</a>
            <%#= link_to "Prescription", new_prescription_path(follow_up_id: follow_up.id, appointment_id: follow_up.appointment_id)%>
            <%= link_to 'Prescription', '#', class: 'show-popup-prescription btn btn-secondary', data: { follow_up_id: follow_up.id, appointment_id: follow_up.appointment_id }  %>
            <div class="patient-table mb-10">
              <table>
                <thead>
                  <tr>
                    <th>Medicine Name</th>
                    <th>Dose</th>
                    <th>Note</th>
                    <th>Action</th>

                  </tr>
                </thead>
                <tbody>
                  <% follow_up.prescriptions.each do |prescription| %>
                    <tr>
                      <td><%= prescription.medicine.name%> </td>
                      <td><%= prescription.dosage %></td>
                      <td><%= prescription.note %></td>
                      <td class= 'custom-delete-button'>
                        <%= link_to 'Edit',  '#',class: 'show-popup-edit-prescription', data: {prescription_id: prescription.id}  %> 
                        <%= button_to 'Delete', prescription_path(prescription), method: :delete, data: { confirm: 'Are you sure?' } %>
                      </td>
                    </tr>

                  <% end %>
                </tbody>
              </table>
            </div>  
          </div>
        <% else %>
          <div class="pdf-container" style="width:1080;">
            <%= image_tag follow_up.pdf%>
          </div>
        <% end %>
      <% end %>
    </div>
  </div>
  <div class="pagination-container">
    <%= paginate @follow_ups %>
  </div>

<% else %>
  <div class="follow-up-container">
    <center><p>No follow ups.</p> </center>
  </div>
<% end %>

<script type='module'>
  document.addEventListener('DOMContentLoaded', function () {
    const follow_ups = <%= raw @follow_ups.to_json(include: { pdf_attachment: { only: [:url] } }) %>;
    
    follow_ups.forEach(follow_up => {
      //pdfUrl = document.getElementById('pdf-' + `${follow_up.id}` + '').getAttribute('data-pdf-url');
      const pdfElement = document.getElementById('pdf-' + `${follow_up.id}` + '');
      if (!pdfElement) {
        console.error(`Element with id pdf-${follow_up.id} not found`);
        return;
      }

      const pdfUrl = pdfElement.getAttribute('data-pdf-url'); // Declare `pdfUrl` with `const`
      if (!pdfUrl) {
        console.error(`PDF URL not found for follow-up ID: ${follow_up.id}`);
        return;
      }
      
      const loadingTask = pdfjsLib.getDocument(pdfUrl);

      loadingTask.promise
        .then((pdf) => {
          console.log('PDF loaded');
          const totalPages = pdf.numPages;  // Get the number of pages in the PDF

          // Loop through all pages and render each one
          for (let pageNumber = 1; pageNumber <= 1; pageNumber++) {
            pdf.getPage(pageNumber).then((page) => {
              const scale = 2;
              const viewport = page.getViewport({ scale: scale });

              // Create a canvas for each page
              const canvas = document.createElement('canvas');
              const context = canvas.getContext('2d');
              canvas.height = viewport.height;
              canvas.width = 1080;

              // Append the canvas to the corresponding PDF div
              document.getElementById(`pdf-${follow_up.id}`).appendChild(canvas);

              // Render the page onto the canvas
              const renderContext = {
                canvasContext: context,
                viewport: viewport,
              };

              page.render(renderContext).promise.then(() => {
                console.log(`Page ${pageNumber} rendered`);
              });
            });
          }
        })
        .catch((error) => {
          console.error('Error loading PDF:', error);
        });
    });

    $(document).on('click', '.show-popup-prescription', function (event) {
      event.preventDefault();
      const appointmentId = $(this).data('appointment-id');
      const followupId = $(this).data('follow-up-id');

      $.ajax({
        url: `/prescriptions/new?appointment_id=${appointmentId}&follow_up_id=${followupId}`,
        type: 'GET',
        success: function (response) {
          // Append the popup content to the body
          $('body').append('<div id="popup-overlay"></div>');
          $('#popup-overlay').html(response);
          $('#popup-overlay').fadeIn();
        },
        error: function (xhr) {
          alert('Failed to load popup content.');
        }
      });
    });

    $(document).on('click', '.show-popup-edit-prescription', function (event) {
      event.preventDefault();
      const prescriptionId = $(this).data('prescription-id');

      $.ajax({
        url: `/prescriptions/${prescriptionId}/edit`,
        type: 'GET',
        success: function (response) {
          // Append the popup content to the body
          $('body').append('<div id="popup-overlay"></div>');
          $('#popup-overlay').html(response);
          $('#popup-overlay').fadeIn();
        },
        error: function (xhr) {
          alert('Failed to load popup content.');
        }
      });
    });

    

  });
</script>
