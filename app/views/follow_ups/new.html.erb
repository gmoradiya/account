<center>
  <button id="fullscreen-btn">Full Screen</button>
</center>

<div class="canvas-container">
  <canvas id="drawingCanvas" width="" height="" style="border: 1px solid black; touch-action: none;"></canvas>
</div>

<!-- Button to save drawing -->
<div class="button-container">
  <button id="savePdfButton" class="btn-primary">
    <i class="fas fa-save"></i> Save Follow-up
  </button>
</div>

<script type="module">
  const canvas = document.getElementById("drawingCanvas");
  const ctx = canvas.getContext("2d");
  let drawing = false;

  function setCanvasSize() {
    const rect = canvas.getBoundingClientRect();
    canvas.width = rect.width * window.devicePixelRatio;
    canvas.height = rect.height * window.devicePixelRatio;
    ctx.scale(window.devicePixelRatio, window.devicePixelRatio);
    ctx.lineWidth = 2; // Adjust line width for smoothness
    ctx.lineCap = "round"; // Round edges for smooth strokes
    ctx.lineJoin = "round";
  }

  setCanvasSize();
  window.addEventListener("resize", setCanvasSize);

  function getCoordinates(e) {
    const rect = canvas.getBoundingClientRect();
    let x, y;
    if (e.touches) {
      x = (e.touches[0].clientX - rect.left);
      y = (e.touches[0].clientY - rect.top);
    } else {
      x = (e.clientX - rect.left);
      y = (e.clientY - rect.top);
    }
    return { x, y };
  }

  function startDrawing(e) {
    e.preventDefault();
    drawing = true;
    const { x, y } = getCoordinates(e);
    ctx.beginPath();
    ctx.moveTo(x, y);
  }

  function draw(e) {
    if (!drawing) return;
    e.preventDefault();
    const { x, y } = getCoordinates(e);
    ctx.lineTo(x, y);
    ctx.stroke();
  }

  function stopDrawing() {
    drawing = false;
    ctx.beginPath();
  }

  // Event listeners for both touch and mouse
  canvas.addEventListener("mousedown", startDrawing);
  canvas.addEventListener("touchstart", startDrawing);

  canvas.addEventListener("mousemove", draw);
  canvas.addEventListener("touchmove", draw);

  canvas.addEventListener("mouseup", stopDrawing);
  canvas.addEventListener("mouseleave", stopDrawing);
  canvas.addEventListener("touchend", stopDrawing);
  canvas.addEventListener("touchcancel", stopDrawing);

  // Save drawing as an image and upload
  document.getElementById("savePdfButton").addEventListener("click", () => {
    canvas.toBlob((blob) => {
      if (!blob) {
        alert("Error generating image.");
        return;
      }

      const caseNumber = "<%= @patient.case_number %>";
      const createdDate = new Date().toLocaleDateString('en-GB').split('/').map(part => part.padStart(2, '0')).join('_');
      const appointmentId = "<%= @appointment.id %>";
      const fileName = `${caseNumber}_${createdDate}_${appointmentId}.png`;

      const formData = new FormData();
      formData.append("follow_up[pdf]", blob, fileName);
      formData.append("follow_up[appointment_id]", "<%= @appointment.id %>");

      fetch("<%= patient_follow_ups_path(@patient) %>", {
        method: "POST",
        body: formData,
        headers: {
          "X-CSRF-Token": "<%= form_authenticity_token %>",
        },
      })
      .then((response) => {
        if (response.ok) {
          window.location.href = "<%= patient_follow_ups_path(@patient) %>";
        } else {
          alert("Error uploading the drawing.");
        }
      })
      .catch((error) => {
        alert("Error uploading the drawing.");
        console.error(error);
      });
    }, "image/png");
  });

  document.getElementById("fullscreen-btn").addEventListener("click", function () {
    let elem = document.documentElement; // Full screen for the entire page

    if (elem.requestFullscreen) {
      elem.requestFullscreen();
    } else if (elem.mozRequestFullScreen) { // Firefox
      elem.mozRequestFullScreen();
    } else if (elem.webkitRequestFullscreen) { // Chrome, Safari, Edge
      elem.webkitRequestFullscreen();
    } else if (elem.msRequestFullscreen) { // IE/Edge
      elem.msRequestFullscreen();
    }

    $("#fullscreen-btn").hide();
    $(".site-header").hide();
  });

  document.addEventListener("fullscreenchange", exitFullScreenHandler);
  document.addEventListener("webkitfullscreenchange", exitFullScreenHandler); // Safari, Chrome
  document.addEventListener("mozfullscreenchange", exitFullScreenHandler); // Firefox
  document.addEventListener("MSFullscreenChange", exitFullScreenHandler); // IE/Edge

  function exitFullScreenHandler() {
    if (!document.fullscreenElement && !document.webkitFullscreenElement && 
        !document.mozFullScreenElement && !document.msFullscreenElement) {
          $(".site-header").show();
          $("#fullscreen-btn").show();
    }
  }
</script>
