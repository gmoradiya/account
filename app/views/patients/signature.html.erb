<div class="consent-form">
  <div class="chief-complaints">
    <div class="form-header">
      <h1>AASTHA HOMEOPATHIC CARE</h1>
      <div class="doctor-info">
        <span><h3>Dr. Hitesh Hingu B.H.M.S.</h3></span>
        <span><h3>Case No: <span class="line"><%= @patient.case_number%></span> </h3></span>
        <span><h3>Date: <span class="line"><%= @patient.date_of_signature || Date.today%></span></h3></span>
      </div>
    </div>
  </div>

  <div class="chief-complaints">
    <div class="patient-form">
    
    <div class="name-age-container" style="display: flex; flex-wrap: wrap; width: 100%;">
      <div style="width: 75%; padding: 0px;">
        <label>Name: </label>
        <span class="line"><%= @patient.name %></span>
      </div>
      <div style="width: 25%; padding: 0px;">
        <label>Age/Sex: </label>
        <span class="line"><%= @patient.age %> / <%= @patient.sex %></span>
      </div>
    </div>
      <div class='row'>
        <label>Address: <span class=""></span></label><span class="line"><%= @patient.address %></span>
      </div>
      <div>
        <label>Occupation: <span class=""></span></label><span class="line"><%= @patient&.occupation %></span>
      </div>
      <div>
        <label>Contact No: <span class=""></span></label><span class="line"><%= @patient.phone_number %></span>
      </div>
      <div>
        <label>Ref. By: <span class=""></span></label><span class="line"><%= @patient.reference_by %></span>
      </div>
    </div>
  </div>

  <div class="chief-complaints">
    <%= form_with(model: @patient, local: true) do |form| %>

      <h2>Chief Complaints:</h2>
      <div class="form-group">
        <%= form.text_area :chief_complaints, class: "input-field"%>
      </div>

      <div class="form-group">
        <%= form.submit 'Save', class: 'btn btn-followup' %>
      </div>
    <%end%>
  </div>

  <ul class="consent">
      <h2>Consent For Treatment</h2>
      <li> I willingly consent to put my patient/myself (details mentioned above) under the treatment (irrespective of the disease diagnosis) of the clinical being satisfied with the care and facility available here.</li>
      <li> I shall be responsible for any good or bad effects of this treatment or any previous treatment on the patient as well as the medicines provided by the doctors, staff, or assistant from this clinic.</li>
      <li> Any delay (if any) in communication with doctors or assistant staff or absence of the doctor for any reason is not subject to medical negligence.</li>
  </ul>

  <div class="signature">

    <div style="display: flex; flex-wrap: wrap; width: 100%;">
      <div style="flex: 1; border: 1px solid #ccc; padding: 10px;">
        <label>Name: <span class=""><%= @patient.name %></span></label><br>
        <label>Date: <span class=""><%= @patient.date_of_signature || Date.today %></span></label><br>
      </div>
      <div style="flex: 1; min-width: 50%; border: 1px solid #ccc; padding: 10px;">
        Signature: 
        <% if @patient.signature.persisted? %>
          <%= image_tag @patient.signature , height: '120px'%>
        <% end %>

        <span class="" id="pdf-signature" data-pdf-url="<%= @patient&.signature.persisted? ? url_for(@patient&.signature) : '' %>">
        </span>

        <% if @patient.signature.present? %>
        <% else %>
          <%= link_to 'Add Sign', '#', class: 'show-popup-signature btn btn-secondary', data: { patient_id: @patient.id } %>
        <% end %>
      </div>
    </div>

    
  </div>

  <div class="form-footer">
      <p>Thank You For the Graceful Healing of All of Us</p>
  </div>
</div>

<script>
  
  document.addEventListener("DOMContentLoaded", () => {
    $(document).on('click', '.show-popup-signature', function (event) {
      event.preventDefault();
      const patientId = $(this).data('patient-id');
      $.ajax({
        url: `/patients/${patientId}/new_signature`,
        type: 'GET',
        success: function (response) {
          $('body').append('<div id="popup-overlay"></div>');
          $('#popup-overlay').html(response);
          $('#popup-overlay').fadeIn();
        },
        error: function (xhr) {
          alert('Failed to load popup content.');
        }
      });
    });

    if("<%=@patient.signature.persisted?%>" == 'true'){
      const pdfElement = document.getElementById('pdf-signature');
      const pdfUrl = pdfElement.getAttribute('data-pdf-url'); // Declare `pdfUrl` with `const`

      if (!pdfUrl) {
        console.error('PDF URL not found for patient');
        return;
      }

      const loadingTask = pdfjsLib.getDocument(pdfUrl);

      loadingTask.promise
      .then((pdf) => {
        console.log('PDF loaded');
        const totalPages = pdf.numPages; // Get the number of pages in the PDF

        // For simplicity, assume the signature is on the first page (adjust as necessary)
        const pageNumber = 1;

        pdf.getPage(pageNumber).then((page) => {
          const scale = 0.5; // Adjust the scale if needed
          const viewport = page.getViewport({ scale: scale });

          // Create a canvas to render the page
          const canvas = document.createElement('canvas');
          const context = canvas.getContext('2d');
          canvas.height = viewport.height;
          canvas.width = viewport.width;

          // Render the page onto the canvas
          const renderContext = {
            canvasContext: context,
            viewport: viewport,
          };

          page.render(renderContext).promise.then(() => {
            console.log(`Page ${pageNumber} rendered`);

            const signatureCanvas = document.createElement('canvas');
            signatureCanvas.width = 250;  // 300px width
            signatureCanvas.height = 100; // 200px height
            const signatureCtx = signatureCanvas.getContext('2d');

            // Draw the portion of the page (signature area) onto the new canvas
            // Here, you would define the coordinates (x, y) and the area (width, height) of the signature.
            const signatureArea = { x: 0, y: 0, width: 300, height: 200 }; // Adjust the coordinates

            // Draw the signature area from the original canvas onto the new smaller canvas
            signatureCtx.drawImage(
              canvas,
              signatureArea.x, signatureArea.y, signatureArea.width, signatureArea.height, // Source coordinates and size
              0, 0, signatureCanvas.width, signatureCanvas.height // Destination coordinates and size
            );

            // Append the signature canvas to the div
            document.getElementById('pdf-signature').appendChild(signatureCanvas);
          });
        });
      })
      .catch((error) => {
        console.error('Error loading PDF:', error);
      });
    }
    
    $(document).on('click', '#close-popup', function () {
      $('#popup-overlay').fadeOut(function () {
        $(this).remove();
      });
    });
    
  });

</script>
  